---
# Copyright 2023 Hewlett Packard Enterprise Development LP

# FORMATTING CONVENTION FOR THIS YAML
## <VARIABLE> - Leave as is. It is automatically updated via spec file.
##
## key:value pairs are used.  
## To include a value that consists of 1 to many elements in a list:
## 1. Itemize each element of a list by prepending with ' - '
##
## To include a value that consists of 1 to many paragraphs:
## 1. The first line of the paragraph must include a vertical bar followed by a return char.
## 2. Itemize each paragraph by prepending with ' - '
## 3. Add your paragragh content including a line break where needed for proper formatting/look.
##    Word wrap is supported.  But may not provide the look and feel you want.  
##    Note that a ':' in your text must be wrapped in quotes for jinja to process it as a string.'
## 4. Spaces are supported for desired formatting for the lines in the paragraph.
## 5. If you have more then 1 paragraph, you can seperate each paragragh with a blank line.
## 6. The prepending "-" for a paragraph should be orange, where the prepending "-" 
##    for a list is white.
##    Or differently colored. It's easier to distinguish the difference if you edit in an editor
##    which supports it.
## 7. The 'static_release_history' key is only temporary.  Upon initial implementation, there likely
##    will be little/no changelog history in the expected format.  Insert 3 of the latest release
##    content, from the previous release notes.  This field, will be removed three releases after
##    the initial implementation, as the expected changelog info will now be available in github
##    history.  If left empty, it will be ignored.  
##    NOTE: Prepend the value with a bar (|) and return. Prepend each line with 2 spaces.  

name: <NAME>
version: <VERSION>
release_date: <RELEASE_DATE>
copyright: <COPYRIGHT>
product_description: |
  - Cray Common Tools Interface (CTI) is a library that abstracts debugger tool support
    to a common interface regardless of the underlying work load manager. It facilitates
    the staging of files and the launch of tool daemons on the compute nodes associated 
    with a parallel job. Options and interfaces can be found in the cti(1) and cti(3) 
    manpages.

known_issues: |
  - Race condition workaround for PALS 1.2.3 in CTI 2.17.0 (22.11). In PALS 1.2.3, there 
    is a race condition between the tool launcher releasing a job from the startup barrier 
    and the job actually getting to the startup barrier. This can result in the job receiving 
    the startup barrier release signal before it actually arrives there, resulting in the job 
    getting stuck in the barrier. As a workaround, the environment variable 
    CTI_PALS_BARRIER_RELEASE_DELAY can be set to add a delay between job startup and barrier 
    release. If set to a positve integer n, CTI will wait n seconds between starting a 
    job and releasing it from the barrier on PALS. A delay as small as one second works in 
    most cases.
notes: |
  - CTI 2.17.1 (PE 22.12) contains a new feature, file deduplication, for Slurm and PALS 
    workload managers. If enabled, CTI will run a check on compute nodes to determine if files 
    can be excluded from the shipped package. This can significantly improve application startup 
    time. To enable, set the environment variable CTI_DEDUPLICATE_FILES=1.
product_dependencies:
 - cray-cdst-support <cdst_version_range> installed
 - cray-dyninst 12.3.0 or later installed
os_dependencies:
 - HPE/Cray Shasta systems with SLES 15 SP3 and SP4
 - HPE Apollo systems with Slurm and RH 8.6
documentation: |
  - Currently the only documentation available is found in common_tools_fe.h, common_tools_be.h, 
    and the tests in the 'tests' directory.
installation_instructions: |
  - rpm -ivh <NAME>-<VERSION>-<RELEASE>.<ARCH>.rpm
  
    To make <NAME> <VERSION> the default version of <NAME>, execute:
    /opt/cray/admin-pe/set_default_files/set_default_<NAME>-<VERSION>
attributions_file: <ATTRIBUTIONS_FILE_PATH>
static_release_history:
