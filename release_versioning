#==============================================================================
# Release and shared library version control for the craytool interface.
#
# 2011-2019 Cray Inc. All Rights Reserved.
#
# This software is available to you under a choice of one of two
# licenses.  You may choose to be licensed under the terms of the GNU
# General Public License (GPL) Version 2, available from the file
# COPYING in the main directory of this source tree, or the
# BSD license below:
#
#     Redistribution and use in source and binary forms, with or
#     without modification, are permitted provided that the following
#     conditions are met:
#
#      - Redistributions of source code must retain the above
#        copyright notice, this list of conditions and the following
#        disclaimer.
#
#      - Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials
#        provided with the distribution.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Note: After changing this file one must 'autoreconf -ifv' AND 'configure'
#       needs to be committed.
#
# LIBTOOLS VERSIONING SYSTEM
# --------------------------
# current, revision, and age are a libtools concept. They are completely
# orthogonal to the Cray release version system (which correlates with
# the module name (e.g. cray-cti/1.0.1)), but intertwine with the DSO file
# names.
#
# Libtools flag: -version-info <current>:<revision>:<age>
#
# I am not sure where 'current' shows up, but it is to be incremented
# for any change to the API (and revision zeroed). I think of this as
# being the most recent API definition.
#
# 'revision' should be incremented for any source change whatsoever.
# I think of this as a count of any type of change since the last
# incompatible change (i.e, 'current' was incremented).
#
# 'age' should be incremented if any interfaces have been added, but
# zeroed if interfaces were removed or changed. I think if this as a
# count of API extensions since the last incompatible change (i.e,
# 'current' was incremented).
#
# The following explanation may help to understand the above rules a
# bit better: consider that there are three possible kinds of reactions
# from users of your library to changes in a shared library:
#
# 1. Programs using the previous version may use the new version as drop-in
#    replacement, and programs using the new version can also work with the
#    previous one. In other words, no recompiling nor relinking is needed.
#    In this case, bump revision only, don’t touch current nor age.
#
# 2. Programs using the previous version may use the new version as drop-in
#    replacement, but programs using the new version may use APIs not present
#    in the previous one. In other words, a program linking against the new
#    version may fail with “unresolved symbols” if linking against the old
#    version at runtime: set revision to 0, bump current and age.
#
# 3. Programs may need to be changed, recompiled, and relinked in order to use
#    the new version. Bump current, set revision and age to 0.
#
# DSO FILE NAMES:
# ---------------
# The file names of the DSO files are:
#    libcraytools_fe.so.<fe_current>.<fe_revision>.<fe_age>
#    libcraytools_be.so.<be_current>.<be_revision>.<be_age>
#
# RELEASE VERSION
# ---------------
# The traditional release version is tracked by the three digit
# craytool_major.craytool_minor.craytool_revision string.
#
# JENKINS INTEGRATION
# -------------------
# We now key off the BUILD_NUMBER environment variable from jenkins
# to get the revision number. We hardcode the revision to "999" if the
# environment variable is not set.
#==============================================================================

# Jenkins will override this
revision="9999"

craytool_major="2"
craytool_minor="0"

be_current="2"
be_age="0"

fe_current="2"
fe_age="0"
